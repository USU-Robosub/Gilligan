/* Auto-generated by genmsg_cpp for file /opt/robosub/rosWorkspace/ObstacleCourseTask/srv/Toggle.srv */
#ifndef OBSTACLECOURSETASK_SERVICE_TOGGLE_H
#define OBSTACLECOURSETASK_SERVICE_TOGGLE_H
#include <string>
#include <vector>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/message.h"
#include "ros/time.h"

#include "ros/service_traits.h"




namespace ObstacleCourseTask
{
template <class ContainerAllocator>
struct ToggleRequest_ : public ros::Message
{
  typedef ToggleRequest_<ContainerAllocator> Type;

  ToggleRequest_()
  : enabled(0)
  {
  }

  ToggleRequest_(const ContainerAllocator& _alloc)
  : enabled(0)
  {
  }

  typedef int8_t _enabled_type;
  int8_t enabled;


private:
  static const char* __s_getDataType_() { return "ObstacleCourseTask/ToggleRequest"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "a6443b0eeced033f2bdf37f5297439af"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "a2f3d572baaef05608a5c9b396bf270d"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "int8 enabled\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, enabled);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, enabled);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(enabled);
    return size;
  }

  typedef boost::shared_ptr< ::ObstacleCourseTask::ToggleRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::ObstacleCourseTask::ToggleRequest_<ContainerAllocator>  const> ConstPtr;
}; // struct ToggleRequest
typedef  ::ObstacleCourseTask::ToggleRequest_<std::allocator<void> > ToggleRequest;

typedef boost::shared_ptr< ::ObstacleCourseTask::ToggleRequest> ToggleRequestPtr;
typedef boost::shared_ptr< ::ObstacleCourseTask::ToggleRequest const> ToggleRequestConstPtr;


template <class ContainerAllocator>
struct ToggleResponse_ : public ros::Message
{
  typedef ToggleResponse_<ContainerAllocator> Type;

  ToggleResponse_()
  : result(0)
  {
  }

  ToggleResponse_(const ContainerAllocator& _alloc)
  : result(0)
  {
  }

  typedef int8_t _result_type;
  int8_t result;


private:
  static const char* __s_getDataType_() { return "ObstacleCourseTask/ToggleResponse"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "4414c67819626a1b8e0f043a9a0d6c9a"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "a2f3d572baaef05608a5c9b396bf270d"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "int8 result\n\
\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, result);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, result);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(result);
    return size;
  }

  typedef boost::shared_ptr< ::ObstacleCourseTask::ToggleResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::ObstacleCourseTask::ToggleResponse_<ContainerAllocator>  const> ConstPtr;
}; // struct ToggleResponse
typedef  ::ObstacleCourseTask::ToggleResponse_<std::allocator<void> > ToggleResponse;

typedef boost::shared_ptr< ::ObstacleCourseTask::ToggleResponse> ToggleResponsePtr;
typedef boost::shared_ptr< ::ObstacleCourseTask::ToggleResponse const> ToggleResponseConstPtr;

struct Toggle
{

typedef ToggleRequest Request;
typedef ToggleResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct Toggle
} // namespace ObstacleCourseTask

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::ObstacleCourseTask::ToggleRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "a6443b0eeced033f2bdf37f5297439af";
  }

  static const char* value(const  ::ObstacleCourseTask::ToggleRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xa6443b0eeced033fULL;
  static const uint64_t static_value2 = 0x2bdf37f5297439afULL;
};

template<class ContainerAllocator>
struct DataType< ::ObstacleCourseTask::ToggleRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "ObstacleCourseTask/ToggleRequest";
  }

  static const char* value(const  ::ObstacleCourseTask::ToggleRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::ObstacleCourseTask::ToggleRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int8 enabled\n\
\n\
";
  }

  static const char* value(const  ::ObstacleCourseTask::ToggleRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::ObstacleCourseTask::ToggleRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::ObstacleCourseTask::ToggleResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "4414c67819626a1b8e0f043a9a0d6c9a";
  }

  static const char* value(const  ::ObstacleCourseTask::ToggleResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x4414c67819626a1bULL;
  static const uint64_t static_value2 = 0x8e0f043a9a0d6c9aULL;
};

template<class ContainerAllocator>
struct DataType< ::ObstacleCourseTask::ToggleResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "ObstacleCourseTask/ToggleResponse";
  }

  static const char* value(const  ::ObstacleCourseTask::ToggleResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::ObstacleCourseTask::ToggleResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int8 result\n\
\n\
\n\
";
  }

  static const char* value(const  ::ObstacleCourseTask::ToggleResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::ObstacleCourseTask::ToggleResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::ObstacleCourseTask::ToggleRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.enabled);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct ToggleRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::ObstacleCourseTask::ToggleResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.result);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct ToggleResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<ObstacleCourseTask::Toggle> {
  static const char* value() 
  {
    return "a2f3d572baaef05608a5c9b396bf270d";
  }

  static const char* value(const ObstacleCourseTask::Toggle&) { return value(); } 
};

template<>
struct DataType<ObstacleCourseTask::Toggle> {
  static const char* value() 
  {
    return "ObstacleCourseTask/Toggle";
  }

  static const char* value(const ObstacleCourseTask::Toggle&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<ObstacleCourseTask::ToggleRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "a2f3d572baaef05608a5c9b396bf270d";
  }

  static const char* value(const ObstacleCourseTask::ToggleRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<ObstacleCourseTask::ToggleRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "ObstacleCourseTask/Toggle";
  }

  static const char* value(const ObstacleCourseTask::ToggleRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<ObstacleCourseTask::ToggleResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "a2f3d572baaef05608a5c9b396bf270d";
  }

  static const char* value(const ObstacleCourseTask::ToggleResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<ObstacleCourseTask::ToggleResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "ObstacleCourseTask/Toggle";
  }

  static const char* value(const ObstacleCourseTask::ToggleResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // OBSTACLECOURSETASK_SERVICE_TOGGLE_H

